plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ru.custom.blog'
version = 'v2.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jsoup:jsoup:1.17.2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar.finalizedBy('generateBatScripts')

tasks.register('generateBatScripts') {
	dependsOn bootJar
	doLast {
		def outputDir = "${buildDir}/libs"
		def jarName = "${rootProject.name}-${version}.jar"

		// Стартовый скрипт
		def startFile = new File(outputDir, "start.bat")
		startFile.text = """@echo off
setlocal
set JAR_NAME=${jarName}

echo Starting %JAR_NAME%...

start "custom-blog" java -jar %~dp0%JAR_NAME%
timeout /t 5 > nul

for /f "tokens=1,*" %%a in ('jps -lv ^| findstr /i "%JAR_NAME%"') do (
    echo %%a > "%~dp0app.pid"
    echo Application started with PID %%a
    goto end
)

echo Failed to find running application matching %JAR_NAME%

:end
endlocal
"""

		// Скрипт остановки
		def stopFile = new File(outputDir, "stop.bat")
		stopFile.text = """@echo off
setlocal

set "PID_FILE=%~dp0app.pid"

if exist "%PID_FILE%" (
    for /f "usebackq delims=" %%p in ("%PID_FILE%") do (
        set "PID=%%p"
        goto readDone
    )
    echo Could not read PID from file.
    goto end
) else (
    echo No PID file found. Is the application ${jarName} running?
    goto end
)

:readDone
echo Stopping application ${jarName} with PID [%PID%]
taskkill /PID %PID% /F
del "%PID_FILE%"
echo Application stopped.

:end
endlocal
"""
		println "Bat-scripts created: start.bat and stop.bat in ${outputDir}"
	}
}

tasks.register('generateReadme') {
	def versionName = project.version
	def appName = project.name
	def jarName = "${rootProject.name}-${version}.jar"

	doLast {
		def readmeContent = """# Приложение ${appName} 
## Версия: ${versionName}
Приложение представляет из себя полукастомный полублог, разработанный в рамках проектной рабты.
Приложение предоставляет возможность просмотра, создания и изменения постов, оставления комментариев 
и лайков, а также дизлайков при особо острой необходимости.


## Сборка
Для сбоки необходимо в корне проекта выполнить команду    `./gradlew clean bootJar`

После этого jar-файл будет собран и расположен по пути `./build/libs`  

## Запуск
### Unix-подобные системы
#### Запуск
Выполнить команду `./build/libs/${jarName} start`

После этого приложение будет доступно по адресу http://localhost:8080/

#### Остановка
Выполнить команду `./build/libs/${jarName} stop`

### Windows
#### Запуск
Выполнить команду `./build/libs/start.bat` (либо вручную открыть файл)

После этого приложение будет доступно по адресу http://localhost:8080/

> [!WARNING]
> Можно также запустить напрямую исполняемый jar-файл командой `./build/libs/${jarName}`, 
но остановка будет возможна только последовательным выполнением команд 
> 1. `jps -lv | findstr /i custom-blog` 
> 2. `taskkill /PID <PID> /f`

#### Остановка
Выполнить команду `./build/libs/stop.bat` (либо вручную открыть файл)

### Из исходного кода
Выполнить команду `./gradlew bootRun`

### Тестирование
Для запуска тестов необходимо выполнить команду `./gradlew test`"""
		file("README.md").text = readmeContent
	}
}