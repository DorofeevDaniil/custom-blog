Spring Framework является одним из самых сложных фремворков для понимания и изучения.
Большинство разработчиков изучают его медленно, через практические задачи и гугл.
Этот подход не эффективен, так как не даёт полной картины и при этом требует больших затрат.

Я хотел бы предложить вам принципиально новый подход к изучению Спринга.
Он заключается в том, что человек проходит через серию специально подготовленных туториалов и самостоятельно реализует
функционал спринга. Особенность этого подхода в том, что он, помимо 100%-го понимания изучаемых аспектов Spring
даёт ещё большой прирост в Java Core (Annotations, Reflection, Files, Generics).

Статья подарит вам незабываемые ощущения и позволит почувствовать себя разработчиком Pivotal.
Шаг за шагом, вы сделаете ваши классы бинами и организуете их жизненный цикл (такой же, как и в реальном спринге).
Классы, которые вы будете реализовывать — BeanFactory, Component, Service, BeanPostProcessor, BeanNameAware,
BeanFactoryAware, InitializingBean, PostConstruct, PreDestroy, DisposableBean, ApplicationContext, ApplicationListener,
ContextClosedEvent.

Немного о себе

Меня зовут Ярослав, и я Java Developer с 4-х летним опытом работы. На данный момент я работаю в компании
EPAM Systems (СПБ), и с интересом углубляюсь в те технологии, которые мы используем. Довольно часто приходится иметь
дело со спрингом, и я вижу в нём некоторую золотую середину, в которой можно разиваться (Java все итак нормально знают,
а слишком специфические инструменты и технологии могут приходить и уходить).

Пару месяцев назад я прошёл сертификацию Spring Professional v5.0 (без прохождения курсов). После этого я задумался
над тем, как можно обучать спрингу других людей. К сожалению, на данный момент нет эффективной методики обучения.
У большинства разработчиков складывается весьма поверхностное представление о фреймворке и его особенностях. Дебажить
исходники спринга слишком тяжело и абсолютно не эффективно с точки зрения обучения (я как-то увлекался этим).
Сделать 10 проектов? Да, вы где-то сможете углубить свои знания и получите много практического опыта, но многое из того,
что «под капотом», так и не откроется перед вами. Читать книгу Spring in Action? Круто, но затратно по усилиям.
Я вот проработал её 40% (во время подготовки к сертификации), но это было не просто.

Единственный способ понять что-то до конца — самостоятельно разработать это. Недавно у меня появилась идея о том, что
можно провести человека через интересный туториал, который будет курировать разработку своего DI-фреймворка. Главная его
особенность будет заключаться в том, что API будет совпадать с изучаемым API. Офигенность данного подхода в том, что
помимо глубокого (без пробелов) понимания спринга, человек получит ОГРОМНОЕ количество опыта по Java Core. Признаюсь
честно, я сам много всего нового узнал во время подготовки статьи, как по Spring, так и по Java Core. Давайте приступим
к разработке!

Проект с нуля

Итак, первое, что нужно сделать — это открыть любимую IDE и создать проект с чистого листа. Никаких Maven, никаких
сторонних библиотек мы подключать не будем. Даже Spring-зависимости подключать не будем. Наша цель — разработать API,
максимально похожий на Spring API, и реализовать его самостоятельно.

В чистом проекте создайте 2 главных пакета. Первый пакет — ваше приложение (com.kciray), и класс Main.java внутри него.
Второй пакет — org.springframework. Да, мы будем дублировать структуру пакетов оригинального спринга, название его
классов и их методов. Есть такой интересный эффект — когда вы создаете что-то свое, это свое начинает казаться простым и
понятным. Потом, когда вы будете работать в больших проектах, вам будет казаться, что там все создано на основе вашей
заготовки. Такой подход может очень положительно сказаться на понимании работы системы в целом, её улучшении,
исправлении багов, решении проблем и так далее.

Продолжение читать тут: https://habr.com/ru/articles/419679/